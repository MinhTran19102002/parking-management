version: '3.4'

services:
  mongodb:
    image: mongo
    container_name: my-mongodb
    ports:
      - "27087:27087"
    networks:
      - db
  data-importer:
    image: mongo
    container_name: data-importer
    volumes:
      - ./database:/database
    command: bash -c "sleep 20 && mongoimport --host mongodb --db paking-management --collection event --file /database/event.json --jsonArray && mongoimport --host mongodb --db paking-management --collection parking --file /database/parking.json --jsonArray && mongoimport --host mongodb --db paking-management --collection parkingTurn --file /database/parkingTurn.json --jsonArray && mongoimport --host mongodb --db paking-management --collection persons --file /database/persons.json --jsonArray && mongoimport --host mongodb --db paking-management --collection vehicles --file /database/vehicles.json --jsonArray  && mongoimport --host mongodb --db paking-management --collection camera --file /database/camera.json --jsonArray && mongoimport --host mongodb --db paking-management --collection config --file /database/config.json --jsonArray && mongoimport --host mongodb --db paking-management --collection deparment --file /database/deparment.json --jsonArray && mongoimport --host mongodb --db paking-management --collection payment --file /database/payment.json --jsonArray"
    depends_on:
      - mongodb
    networks:
      - db
  
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    networks:
      - db
    ports:
      - 8010:8010
    environment:
      MONGODB_URI: mongodb://mongodb/
      FE_HOST: https://park.workon.space
    expose:
      - 8010
    depends_on:
      - mongodb
      - data-importer

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 10048:5173
    networks:
      - db
    depends_on:
      - backend

  # rtmp-to-hls:
  #   build: ./rtmp-to-hls
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./hls:/usr/share/nginx/html/hls
  #   networks:
  #     - db

  web_out_in_parking:
    build: ./service-in-out
    ports:
      - "5000:5000"
    expose:
      - 5000
    environment:
      APP_HOST: https://park.workon.space/api
    restart: always
    networks:
      - db
    depends_on:
      - backend

  hls_stream:
    command: [ "python", "src/hls-stream/api.py" ]
    image: hls-stream:v0.1.0
    build:
      context: ./hls-server/deployment/hls-stream
      dockerfile: Dockerfile
    container_name: hls_stream
    working_dir: /app3
    env_file:
      - ./hls-server/.env
    restart: unless-stopped
    volumes:
      - ./hls-server/src/hls-stream:/app3/src/hls-stream/
      - ./hls-server/metadata:/app3/metadata/
      - ./hls-server/stream:/app3/stream/
      - ./hls-server/templates:/app3/templates/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

    # network_mode: "host"
    ports:
      - 3597:3597
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    tty: true
    networks:
      - db

networks:
  db:
    driver: bridge
